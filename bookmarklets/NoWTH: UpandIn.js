javascript:(()=>{"use strict";function e(){const e=document.querySelector(".EditTicket");if(!e){console.log("Save button not found");return}e.click(),console.log("Clicked save button")}function t(e,t){return Array.from(e.options).find(e=>e.textContent.trim().toLowerCase()===t.toLowerCase())}function o(){["chkContact","chkResources","chkCC"].forEach(e=>{const t=document.getElementById(e);if(!t){console.log(e,"not found");return}t.checked?(console.log(e,"is checked, unchecking now..."),t.click()):console.log(e,"already unchecked")})}async function n(){const n=document.getElementById("ddlBoard"),c=document.getElementById("ddlStatus"),l=document.getElementById("ddlType"),i=document.getElementById("ddlSubType"),a=document.getElementById("ddlSubTypeItem");if(!n||!c||!i||!a){console.log("One of dropdowns not found");return}const s=t(n,"atm/itm")?.selected;if(!s){console.log("atm/itm was not selected");return}await d(),console.log("Closing the ticket to no withdrawal activity"),r(l,"hardware"),await u(i,"network notification",8e3),r(i,"network notification"),await u(a,"no withdrawal activity",8e3),r(c,"fixed"),r(a,"no withdrawal activity"),e()}function r(e,o){if(!e)return;const n=t(e,o);if(!n){console.log(`Option "${o}" not found for`,e.id||e.name);return}e.value=n.value,e.dispatchEvent(new Event("input",{bubbles:!0})),e.dispatchEvent(new Event("change",{bubbles:!0}))}function u(e,o,n=5e3){return new Promise((r,u)=>{if(!e){u(new Error("waitForOption: selectEl is null"));return}if(t(e,o)){r();return}const n=new MutationObserver(()=>{t(e,o)&&(n.disconnect(),r())});n.observe(e,{childList:!0,subtree:!0});const c=setTimeout(()=>{n.disconnect(),u(new Error(`Timeout waiting for option "${o}" on ${e.id||e.name}`))},n);const l=()=>{t(e,o)&&(i(),r())};e.addEventListener("change",l,{once:!0});function i(){clearTimeout(c),n.disconnect(),e.removeEventListener("change",l)}})}function c(e){return new Promise(t=>{setTimeout(t,1e3*e)})}async function d(){addSupportNotes(!0),console.log("Waiting 1 second..."),await c(1),console.log("Finished waiting"),console.log("Changing the value for the notes to 'Terminal is up and in service'");const e=document.getElementById("txtNoteDescription");if(!e){console.log("Textbox not found");return}e.value="Terminal is up and in service",SubmitNotes(!0)}const l=new MutationObserver(()=>{const e=document.querySelector("#modal-addnote");e&&!e.classList.contains("mfp-hide")&&(console.log("Add notes modal is visible!"),o())});l.observe(document.body,{childList:!0,subtree:!0}),n();})();
