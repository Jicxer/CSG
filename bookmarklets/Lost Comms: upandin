javascript:(()=>{"use strict";function clickSaveButton(){const e=document.querySelector(".EditTicket");if(!e){console.log("Save button not found");return}e.click(),console.log("Clicked save button")}function findOption(e,t){return Array.from(e.options).find(e=>e.textContent.trim().toLowerCase()===t.toLowerCase())}function handleAddNotesCheckboxes(){["chkContact","chkResources","chkCC"].forEach(e=>{const t=document.getElementById(e);if(!t){console.log(e,"not found");return}t.checked?(console.log(e,"is checked, unchecking now..."),t.click()):console.log(e,"already unchecked")})}async function closeasLCMS(){const e=document.getElementById("ddlBoard"),t=document.getElementById("ddlStatus"),o=document.getElementById("ddlSubTypeItem");if(!e||!t||!o){console.log("One of dropdowns not found");return}const n=findOption(e,"atm/itm")?.selected;if(!n){console.log("atm/itm was not selected");return}await addNotes(),console.log("Closing the ticket to lost comms"),t.value=findOption(t,"fixed")?.value,o.value=findOption(o,"lost comms")?.value,clickSaveButton()}function wait(e){return new Promise(t=>{setTimeout(t,1e3*e)})}async function addNotes(){addSupportNotes(!0),console.log("Waiting 1 second..."),await wait(1),console.log("Finished waiting");console.log(%27Changing the value for the notes to "no fraud found"%27);const e=document.getElementById("txtNoteDescription");if(!e){console.log("Textbox not found");return}e.value="Terminal is up and in service",SubmitNotes(!0)}const bodyObserver=new MutationObserver(()=>{const e=document.querySelector("#modal-addnote");e&&!e.classList.contains("mfp-hide")&&(console.log("Add notes modal is visible!"),handleAddNotesCheckboxes())});bodyObserver.observe(document.body,{childList:!0,subtree:!0});closeasLCMS();})();
