javascript:(()=>{"use strict";function clickSaveButton(){const e=document.querySelector(".EditTicket");if(!e){console.log("Save button not found");return}e.click(),console.log("Clicked save button")}function findOption(e,t){return Array.from(e.options).find(o=>o.textContent.trim().toLowerCase()===t.toLowerCase())}function handleAddNotesCheckboxes(){["chkContact","chkResources","chkCC"].forEach(e=>{const t=document.getElementById(e);if(!t){console.log(e,"not found");return}t.checked?(console.log(e,"is checked, unchecking now..."),t.click()):console.log(e,"already unchecked")})}async function closeasLCMS(){const e=document.getElementById("ddlBoard"),t=document.getElementById("ddlStatus"),o=document.getElementById("ddlType"),n=document.getElementById("ddlSubType"),c=document.getElementById("ddlSubTypeItem");if(!e||!t||!n||!c){console.log("One of dropdowns not found");return}if(!findOption(e,"atm/itm")?.selected){console.log("atm/itm was not selected");return}await addNotes(),console.log("Closing the ticket to lost comms"),setSelectByLabel(o,"hardware"),await waitForOption(n,"network notification",8e3),setSelectByLabel(n,"network notification"),await waitForOption(c,"lost comms",8e3),setSelectByLabel(t,"fixed"),setSelectByLabel(c,"lost comms"),clickSaveButton()}function setSelectByLabel(e,t){if(!e)return;const o=findOption(e,t);if(!o){console.log(`Option "${t}" not found for`,e.id||e.name);return}e.value=o.value,e.dispatchEvent(new Event("input",{bubbles:!0})),e.dispatchEvent(new Event("change",{bubbles:!0}))}function waitForOption(e,t,o=5e3){return new Promise((n,c)=>{if(!e){c(new Error("waitForOption: selectEl is null"));return}if(findOption(e,t)){n();return}const s=new MutationObserver(()=>{findOption(e,t)&&(s.disconnect(),n())});s.observe(e,{childList:!0,subtree:!0});const i=setTimeout(()=>{s.disconnect(),c(new Error(`Timeout waiting for option "${t}" on ${e.id||e.name}`))},o),d=()=>{findOption(e,t)&&(l(),n())};e.addEventListener("change",d,{once:!0});function l(){clearTimeout(i),s.disconnect(),e.removeEventListener("change",d)}})}function wait(e){return new Promise(t=>{setTimeout(t,1e3*e)})}async function addNotes(){addSupportNotes(!0),console.log("Waiting 1 second..."),await wait(1),console.log("Finished waiting");console.log("Changing the value for the notes to %27no fraud found%27");const e=document.getElementById("txtNoteDescription");if(!e){console.log("Textbox not found");return}e.value="Terminal is up and in service",SubmitNotes(!0)}const bodyObserver=new MutationObserver(()=>{const e=document.querySelector("#modal-addnote");e&&!e.classList.contains("mfp-hide")&&(console.log("Add notes modal is visible!"),handleAddNotesCheckboxes())});bodyObserver.observe(document.body,{childList:!0,subtree:!0}),closeasLCMS();})();
